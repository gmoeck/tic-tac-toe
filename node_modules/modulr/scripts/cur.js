var uglify = require('uglify-js'),
    processor = uglify.uglify,
    parser = uglify.parser;

var path = require('path');

var _toString = Object.prototype.toString;

exports.createParser = createParser;
exports.create = createParser;
function createParser(config) {
  return new Parser(config);
}

exports.Parser = Parser;
function Parser(config) {
  this.config = config;
  this.walker = processor.ast_walker();
}

(function(p) {
  p.parse = parse;
  function parse(str, file) {
    var results = [],
        walker = this.walker,
        ast;
    ast = parser.parse(str);
    var def = null;
    function handleExpr(expr, args) {
      if (expr[0] == "name" && expr[1] == "define") {
        def = args[0][1]
      }
      
      if (expr[0] == "name" && expr[1] == "require") {
        var r = args[0][1];
        if (r.charAt(0) == '.') {
          r = path.join(def, '..', r);
        }
        results.push({ source: def, target: r });
      }

    }

    walker.with_walkers({
      "new": handleExpr,
      "call": handleExpr
    }, function() { return  walker.walk(ast); });

    return results;
  }

  p.astToSrcCode = astToSrcCode;
  function astToSrcCode(ast) {
    return processor.gen_code(ast);
  }
})(Parser.prototype);

var src = require('fs').readFileSync('./scripts/talk.js', 'utf8');
console.log(JSON.stringify(new Parser().parse(src), null, 2))
